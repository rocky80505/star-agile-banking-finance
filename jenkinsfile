pipeline {
    agent any

    environment {
        // Define environment variables for Docker and Ansible
        DOCKER_REGISTRY = 'docker.io'
        DOCKER_IMAGE = 'my-app'
        DOCKER_TAG = 'latest'
        ANSIBLE_PLAYBOOK = 'ansible-playbook.yml'
    }

    stages {
        stage('Checkout') {
            steps {
                // Step to pull the latest code from your Git repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Step to build your project using Maven
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Step to build the Docker image for your application
                script {
                    def imageName = "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_TAG}"
                    sh "docker build -t ${imageName} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                // Step to push the Docker image to a Docker registry
                script {
                    def imageName = "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_TAG}"
                    withDockerRegistry(credentialsId: 'dockerhubpwd', url: 'https://index.docker.io/v1/') {
                        sh "docker push ${imageName}"
                    }
                }
            }
        }

        stage('Deploy with Ansible') {
            steps {
                // Step to deploy the application using Ansible
                sh "ansible-playbook ${ANSIBLE_PLAYBOOK}"
            }
        }
    }

    post {
        always {
            // Clean up or notify after the pipeline completes
            cleanWs()
        }
    }
}
